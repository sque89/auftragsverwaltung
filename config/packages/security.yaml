security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            user_checker: App\Security\LoginUserChecker
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        settings:
            pattern:  ^/api/settings
            security: false
        deliveryTypes:
            pattern:  ^/api/delivery-types
            security: false
        customerImport:
            pattern:  ^/api/customers/import
            security: false
        api:
            pattern:   ^/api
            stateless: true
            user_checker: App\Security\LoginUserChecker
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
